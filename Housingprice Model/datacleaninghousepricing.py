# -*- coding: utf-8 -*-
"""DataCleaningHousepricing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19dz7BZ-7GKjOypEZi-wGE9U6_6pBFoWF
"""

import pandas as pd

def clean_data_Housepricing():
    df = pd.read_csv('AmesHousing.csv')

    # df.info()
    # df.head()
    # df['Overall Qual'].unique()

    # Renaming 'Overall Qual' to make it more understandable
    # Changing the values to make them more understandable
    df['Quality'] = df['Overall Qual'].replace({
        1: "bad",
        2: "bad",
        3: "bad",
        4: "medium",
        5: "medium",
        6: "medium",
        7: "good",
        8: "good",
        9: "good",
        10: "good",
    })

    # mean_prices = df.groupby('Neighborhood')['SalePrice'].mean().sort_values()
    # print(mean_prices)
    # Renaming 'Neighborhood' to make it more understandable
    # Changing the values to make them more understandable
    df['Location'] = df['Neighborhood'].replace({
        "MeadowV": "poor",
        "IDOTRR": "poor",
        "BrDale": "poor",
        "OldTown": "poor",
        "BrkSide": "poor",
        "Edwards": "poor",
        "SWISU": "poor",
        "Sawyer": "poor",
        "Landmrk": "normal",
        "NPkVill": "normal",
        "Blueste": "normal",
        "NAmes": "normal",
        "Gilbert": "normal",
        "Greens": "normal",
        "Blmngtn": "normal",
        "CollgCr": "normal",
        "Crawfor": "normal",
        "ClearCr": "rich",
        "Somerst": "rich",
        "Timber" : "rich",
        "Veenker" : "rich",
        "GrnHill" : "rich",
        "NridgHt" : "rich",
        "StoneBr" : "rich",
        "NoRidge" : "rich",
    })

    # df['Bsmt Qual'].unique()
    # Renaming 'Bsmt Qual' to make it more understandable
    # Changing the values to make them more understandable
    df['Basement available'] = df['Bsmt Qual'].replace({
        "TA": "Yes",
        "Gd": "Yes",
        "Ex": "Yes",
        "Fa": "Yes",
        "Po": "Yes"
    })
    df['Basement available'] = df['Basement available'].fillna("No")

    # Renaming features to make them more understandable
    df['Basement Area (ft²)'] = df['Total Bsmt SF']
    df['Heating Type'] = df['Heating']
    df['Air Conditioning available'] = df['Central Air']
    df['Living Area without Basement (ft²)'] = df['Gr Liv Area']
    df['Rooms'] = df['TotRms AbvGrd']
    df['Chimney'] = df['Fireplaces']
    df['Property Area (ft²)'] = df['Lot Area']
    df['last Renovation (year)'] = df['Year Remod/Add']
    df['Beds'] = df['Bedroom AbvGr']
    df['Kitchens'] = df['Kitchen AbvGr']
    df['Basement Baths'] = df['Bsmt Full Bath'] + 0.5 * df['Bsmt Half Bath']
    df['Baths'] = df['Full Bath'] + 0.5 *  df['Half Bath'] + df['Basement Baths']
    df['Garage Capacity'] = df['Garage Cars']


    # collecting important columns for the models
    important_cols = [
        'Location',
        'Property Area (ft²)',
        'Living Area without Basement (ft²)',
        'Basement Area (ft²)',
        'Beds',
        'Kitchens',
        'Baths',
        'Garage Capacity',
        'Basement available',
        'Year Built',
        'last Renovation (year)',
        'Quality',
        'Air Conditioning available',
        'SalePrice'
    ]
    df = df[important_cols].dropna()

    return df